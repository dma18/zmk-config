/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUMSYM 1
#define SYMBT 2
#define NAVI 3

/ {
  chosen {
    //zmk,matrix_transform = &default_transform;
    zmk,matrix_transform = &five_column_transform;
  };
};

/ {

  macros {
        triple_grave: triple_grave {
        label = "triple_grave";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
            = <&macro_tap &kp GRAVE &kp GRAVE &kp GRAVE>;
        };

        double_shift: double_shift {
        label = "double_shift";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
            =<&macro_tap &kp LSHFT>
            ,<&macro_wait_time 20>
            ,<&macro_tap &kp LSHFT>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//            | ESC | TAB | BSPC |   | SPACE | ENTER  | DEL |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    
   &hm LCTL A &hm LALT S &hm LGUI D &hm LSHFT F &kp G   &kp H &hm RSHFT J &hm RGUI K   &hm RALT L  &hm RCTL SEMI
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
                  &kp ESC &lt SYMBT TAB &lt NUMSYM BSPC   &lt NAVI SPACE &kp ENTER &kp DEL
                        >;
                };

                num_sym_layer {
                        label = "NUMSYM";
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// |  !  |  @  |  #  |  $  |  (  |   |  )  |  &  |  *  |  %  |  ^  |
// |     |  {  |  [  |  -  |  =  |   |  +  |  _  |  ]  |  }  |     |
//             |     |     |     |   |     |     |     |
                        bindings = <
   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5   &kp N6   &kp N7   &kp N8   &kp N9   &kp N0 
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp LPAR &kp RPAR &kp AMPS &kp STAR &kp PRCNT &kp CARET
   &trans   &kp LBRC   &kp LBKT   &kp MINUS   &kp EQUAL   &kp PLUS   &kp UNDER   &kp RBKT   &kp RBRC   &trans
                &trans    &trans       &trans      &trans  &trans   &trans
                        >;
                };

                sym_bt_layer {
                        label = "SYM/BT";
// -----------------------------------------------------------------------------------------
// |     |  ~  | "|" |  "  |      |   |     |     |     |     |BTCLR|
// |     | ``` |  \  |  '  |2xSHFT|   | BT1 | BT2 | BT3 | BT4 | BT5 |
// |     |     |     |     |      |   |     |     |     |     |     |
//             |     |     |      |   |     |     |     |
                        bindings = <
   &trans &kp TILDE &kp PIPE &kp DQT &trans &trans &trans  &trans &trans &bt BT_CLR
   &trans &triple_grave &kp BSLH &kp SQT &double_shift     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4
  &trans   &trans &trans   &trans   &trans      &trans &trans  &trans     &trans &trans
                    &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };

                nav_layer {
                        label = " NAVI ";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |     |     |PG_UP|  UP |PG_DOWN|VOL_UP|
// |     |     |     |     |     |   |     |     |LEFT |DOWN |RIGHT |MUTE |
// |     |     |     |     |     |   |     |     |LC(LEFT)| LC(UP) |LC(RIGHT)|VOL_DOWN|
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans            &trans &trans  &kp UP &kp PG_DN &kp C_VOL_UP
   &trans   &trans &trans   &trans   &trans      &trans &kp LEFT &kp DOWN  &kp RIGHT &kp C_MUTE
  &trans   &trans &trans   &trans   &trans       &trans &kp LC(LEFT)  &kp LC(UP) &kp LC(RIGHT) &kp C_VOL_DN
                    &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };
        };
};